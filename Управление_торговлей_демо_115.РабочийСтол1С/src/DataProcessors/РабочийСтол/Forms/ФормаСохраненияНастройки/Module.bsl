&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ТекПользователь") Тогда
		ТекПользователь = Параметры.ТекПользователь;
	КонецЕсли;
	Если Параметры.Свойство("АдресНастройки") Тогда
		АдресНастройки = Параметры.АдресНастройки;
	КонецЕсли;
	
	Если Параметры.Свойство("ВариантНастройки") Тогда
		ВариантНастройки = Параметры.ВариантНастройки;
		ЗаполнитьПоНастройке();
		НаименованиеНастройки = ВариантНастройки.Наименование;
	КонецЕсли;
	
	НастроитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоНастройке()
	ТаблицаПользователей = РегистрыСведений.РБ_НастройкиРабочегоСтола.ПолучитьСписокПользователейВариантаНастройки(ВариантНастройки);
	
	Для Каждого СтрПользователь Из ТаблицаПользователей Цикл
		Если ТекПользователь = СтрПользователь.Пользователь Тогда
			Продолжить;
		КонецЕсли;
		СтрокаПользователи = Пользователи.Добавить();
		СтрокаПользователи.Пользователь = СтрПользователь.Пользователь;
	КонецЦикла;
	
	Если Пользователи.Количество() > 0 Тогда
		МетодСохранения = 1;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура МетодСохраненияПриИзменении(Элемент)
	МетодСохраненияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура МетодСохраненияПриИзмененииНаСервере()
	НастроитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементов()
	Элементы.Пользователи.Видимость = МетодСохранения = 1;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодобрать(Команда)
	ВыбратьПодобратьПользователейЗавершение();
КонецПроцедуры
&НаСервере
Функция СписокПользователей()
	Возврат Пользователи.Выгрузить().ВыгрузитьКолонку("Пользователь");
КонецФункции

&НаКлиенте
Процедура ВыбратьПодобратьПользователейЗавершение() Экспорт

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ТекущаяСтрока", ?(
		Элементы.Пользователи.ТекущиеДанные = Неопределено, Неопределено,
		Элементы.Пользователи.ТекущиеДанные.Пользователь));
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РасширенныйПодбор", Истина);
	ПараметрыФормы.Вставить("ПараметрыРасширеннойФормыПодбора", Неопределено);
	ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);
	ПараметрыФормы.Вставить("ВыбранныеПользователи", СписокПользователей());
	ПараметрыФормы.Вставить("ЗаголовокФормыПодбора", Заголовок);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Элементы.Пользователи);
КонецПроцедуры
&НаКлиенте
Процедура ПользователиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Пользователи.Очистить();
	Для Каждого Пользователь Из ВыбранноеЗначение Цикл
		СтрокаПользователи = Пользователи.Добавить();
		СтрокаПользователи.Пользователь = Пользователь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранить(Команда)
	Если Не ЗначениеЗаполнено(НаименованиеНастройки) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заполните наименование",,"НаименованиеНастройки");
		Возврат;
	КонецЕсли;
	
	Оповестить("СохранениеНастроек", Новый Структура("ВариантНастройки,РезультатСохранения",ВариантНастройки,СохранитьНаСервере() ));
	Закрыть();
КонецПроцедуры

&НаСервере
Функция СохранитьНаСервере()
	НачатьТранзакцию();	
	Попытка
		ТаблицаОбъектов = ПолучитьИзВременногоХранилища(АдресНастройки);
		Настройка = Новый ХранилищеЗначения(ТаблицаОбъектов);
		ВариантНастройки = Справочники.РБ_ВариантыНастроекРабочегоСтола.ВариантНастройки(ВариантНастройки,НаименованиеНастройки , Настройка,ТекПользователь);
		
		РегистрыСведений.РБ_НастройкиРабочегоСтола.УдалитьЗаписиРегистраПоНастройке(ВариантНастройки);
		
		РегистрыСведений.РБ_НастройкиРабочегоСтола.ЗаписатьНастройкиРабочегоСтола(ТекПользователь, ВариантНастройки);
		Если МетодСохранения = 1 Тогда
			РегистрыСведений.РБ_НастройкиРабочегоСтола.ЗаписатьНастройкиРабочегоСтола(СписокПользователей(), ВариантНастройки);
		КонецЕсли;
		РезультатСохранения = "Настройки успешно сохранены!";
		ЗафиксироватьТранзакцию();
	Исключение
		РезультатСохранения = "Ошибка сохранения настроек! " + ОписаниеОшибки();
		ОтменитьТранзакцию();
	КонецПопытки;

	Возврат РезультатСохранения;

КонецФункции